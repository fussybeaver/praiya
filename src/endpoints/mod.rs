//! Endpoints module and `PerPage` struct/impl
/* 
 * PagerDuty API
 *
 * This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema). 
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@pagerduty.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

pub const GITHUB_BASE_API_URL: &str = if cfg!(feature = "mock") {
    "http://localhost:8080"
} else {
    "https://api.github.com"
};

pub mod priorities;
pub mod log_entries;
pub mod schedules;
pub mod business_services;
pub mod abilities;
pub mod extension_schemas;
pub mod rulesets;
pub mod vendors;
pub mod escalation_policies;
pub mod response_plays;
pub mod add_ons;
pub mod on_calls;
pub mod incidents;
pub mod service_dependencies;
pub mod users;
pub mod extensions;
pub mod analytics;
pub mod audit;
pub mod services;
pub mod teams;
pub mod maintenance_windows;
pub mod notifications;
pub mod tags;

pub struct PerPage {
    per_page: u16,
    page: u16,
}

impl PerPage {
    pub fn new(per_page: u16) -> Self {
        PerPage { per_page, page: 0 }
    }

    pub fn page(&mut self, page: u16) -> &mut Self {
        self.page = page;
        self
    }
}

impl std::convert::AsRef<PerPage> for PerPage {
    fn as_ref(&self) -> &PerPage {
        self
    }
}
