//! Method, error and parameter types for the Abilities endpoint.
#![allow(
    unused_imports,
)]
/* 
 * PagerDuty API
 *
 * This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema). 
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@pagerduty.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::Deserialize;

use crate::models::*;

use std::collections::HashMap;
use serde_json::value::Value;

pub struct AbilitiesClient {
    pub(crate) api_endpoint: String,
    pub(crate) client: PagerDuty,
}



impl BaseOption for AbilitiesGetAbilityParams {
    fn build_paginated_query_string(&self, pagination: PaginationQueryComponent) -> String {
        let mut query = form_urlencoded::Serializer::new(form_urlencoded::Serializer::Clone(&self.qs))
        query.append_pair("offset", &pagination.offset.to_string());
        query.append_pair("offset", &pagination.limit.to_string());
        query.finish()
    }
}

impl BaseOption for AbilitiesListAbilitiesParams {
    fn build_paginated_query_string(&self, pagination: PaginationQueryComponent) -> String {
        let mut query = form_urlencoded::Serializer::new(form_urlencoded::Serializer::Clone(&self.qs))
        query.append_pair("offset", &pagination.offset.to_string());
        query.append_pair("offset", &pagination.limit.to_string());
        query.finish()
    }
}

impl AbilitiesClient {
    /// ---
    ///
    /// # Test an ability
    ///
    /// Test whether your account has a given ability.
    /// 
    /// "Abilities" describes your account's capabilities by feature name. For example `"teams"`.
    /// 
    /// An ability may be available to your account based on things like your pricing plan or account state.
    /// 
    /// For more information see the [API Concepts Document](../../docs/CONCEPTS.md#abilities)
    /// 
    /// 
    /// ---
    pub async fn get_ability(&self, id: &str) -> Result<(), Error> {
        let uri = PagerDuty::parse_url(&self.api_endpoint, format!("{}/{}", &self.path(), &id), "")?;
            
        let req = self.client.build_request(
            uri,
            Builder::new().method(Method::GET),
            Body::empty());


        self.client
            .process_into_value(req)
            .await
    }

    /// ---
    ///
    /// # List abilities
    ///
    /// List all of your account's abilities, by name.
    /// 
    /// "Abilities" describes your account's capabilities by feature name. For example `"teams"`.
    /// 
    /// An ability may be available to your account based on things like your pricing plan or account state.
    /// 
    /// For more information see the [API Concepts Document](../../docs/CONCEPTS.md#abilities)
    /// 
    /// 
    /// ---
    pub async fn list_abilities(&self) -> Result<AbilitiesResponse, Error> {
        let uri = PagerDuty::parse_url(&self.api_endpoint, &self.path(), "")?;
            
        let req = self.client.build_request(
            uri,
            Builder::new().method(Method::GET),
            Body::empty());


        self.client
            .process_into_value(req)
            .await
    }

}
