//! Method, error and parameter types for the {{classname}} endpoint.
#![allow(
    unused_imports,
)]
{{>partial_header}}

use serde::Deserialize;

use crate::models::*;

use std::collections::HashMap;
use serde_json::value::Value;

pub struct {{classname}}Client {
    pub(crate) api_endpoint: String,
    pub(crate) client: PagerDuty,
}

{{#operations}}

{{#operation}}{{#contents}}{{#hasQueryParams}}
/// Query parameters for the [{{summary}}]({{classname}}::{{operationId}}()) endpoint.
#[derive(Default, Serialize)]
pub struct {{classname}}{{operationIdCamelCase}}Params<'req> {
    pub(crate) qs: String,
}

pub struct {{classname}}{{operationIdCamelCase}}ParamsBuilder {
    qs: form_urlencoded::Serializer<'req, String>,
}

impl<'req> {{classname}}{{operationIdCamelCase}}ParamsBuilder<'req> {
    pub fn new() -> Self {
        Self {
            qs: form_urlencoded::Serializer::new(String::new())
        }
    }
    {{#queryParams}}{{^vendorExtensions.x-codegen-ignore}}

    {{#description}}/// {{{.}}}{{/description}}
    pub fn {{paramName}}{{#vendorExtensions.x-codegen-list-container-string}}<I: IntoIterator<Item = &'req str>>{{/vendorExtensions.x-codegen-list-container-string}}(&mut self, {{paramName}}: {{#isString}}&'req str{{/isString}}{{#isUuid}}&'req str{{/isUuid}}{{^isString}}{{^isUuid}}{{#vendorExtensions.x-codegen-list-container-string}}I{{/vendorExtensions.x-codegen-list-container-string}}{{^vendorExtensions.x-codegen-list-container-string}}{{{dataType}}}{{/vendorExtensions.x-codegen-list-container-string}}{{/isUuid}}{{/isString}}) -> &mut Self {
        {{#vendorExtensions.x-codegen-list-container-string}}
        for item in {{paramName}} {
            self.qs.append_pair("{{paramName}}[]", serde_urlencoded::to_string(item));
        }{{/vendorExtensions.x-codegen-list-container-string ~}}
        {{^vendorExtensions.x-codegen-list-container-string}}
        self.qs.append_pair("{{paramName}}", serde_urlencoded::to_string({{paramName}}));
        {{/vendorExtensions.x-codegen-list-container-string}}

        self
    }
    {{/vendorExtensions.x-codegen-ignore}}{{/queryParams}}
}

{{/hasQueryParams}}

impl BaseOption for {{classname}}{{operationIdCamelCase}}Params {
    fn build_paginated_query_string(&self, pagination: PaginationQueryComponent) -> String {
        let mut query = form_urlencoded::Serializer::new(form_urlencoded::Serializer::Clone(&self.qs))
        query.append_pair("offset", &pagination.offset.to_string());
        query.append_pair("offset", &pagination.limit.to_string());
        query.finish()
    }
}
{{/contents}}{{/operation}}

impl {{classname}}Client {
{{#operation}}{{#contents}}
    /// ---
    ///
    {{#summary}}
    /// # {{.}}
    {{/summary}}{{#unescapedNotes}}///
    /// {{{.}}}
    {{/unescapedNotes}}/// 
    /// ---
    {{#vendorExtensions.x-codegen-is-list-fn}}
    pub fn {{operationId}}(&self{{#hasParams}}, {{/hasParams}}{{#pathParams}}{{paramName}}: {{#nullable}}Option<{{#isString}}&str{{/isString}}{{#isUuid}}&str{{/isUuid}}{{^isString}}{{^isUuid}}{{{dataType}}}{{/isUuid}}{{/isString}}>{{/nullable}}{{^nullable}}{{#isString}}&str{{/isString}}{{#isUuid}}&str{{/isUuid}}{{^isString}}{{^isUuid}}{{{dataType}}}{{/isUuid}}{{/isString}}{{/nullable}}{{#hasMore}}, {{/hasMore}}{{/pathParams}}{{#hasQueryParams}}{{#hasPathParams}}, {{/hasPathParams}}query_params: {{classname}}{{operationIdCamelCase}}Params{{/hasQueryParams}}) -> impl Stream<Item = Result<{{#responses}}{{#vendorExtensions.x-is-default}}{{{vendorExtensions.x-codegen-pagination-response-inner}}}{{/vendorExtensions.x-is-default}}{{/responses}}{{#vendorExtensions.x-codegen-response-empty-default}}(){{/vendorExtensions.x-codegen-response-empty-default}}, Error>> + '_ {
        let base_request = BaseRequest {
            host: String::clone(&self.api_endpoint),
            method: Method::{{httpMethod}},
            options: Arc::new({{classname}}{{operationIdCamelCase}}ParamsBuilder::new().build()),
            path: self.path(),
        };

        self.client
            .process_into_paginated_stream::<{{#responses}}{{#vendorExtensions.x-is-default}}{{{dataType}}}{{/vendorExtensions.x-is-default}}{{/responses}}{{#vendorExtensions.x-codegen-response-empty-default}}(){{/vendorExtensions.x-codegen-response-empty-default}}, >
    }
    {{/vendorExtensions.x-codegen-is-list-fn}}
    {{^vendorExtensions.x-codegen-is-list-fn}}
    pub async fn {{operationId}}(&self{{#hasParams}}, {{/hasParams}}{{#pathParams}}{{paramName}}: {{#nullable}}Option<{{#isString}}&str{{/isString}}{{#isUuid}}&str{{/isUuid}}{{^isString}}{{^isUuid}}{{{dataType}}}{{/isUuid}}{{/isString}}>{{/nullable}}{{^nullable}}{{#isString}}&str{{/isString}}{{#isUuid}}&str{{/isUuid}}{{^isString}}{{^isUuid}}{{{dataType}}}{{/isUuid}}{{/isString}}{{/nullable}}{{#hasMore}}, {{/hasMore}}{{/pathParams}}{{#hasQueryParams}}{{#hasPathParams}}, {{/hasPathParams}}query_params: {{classname}}{{operationIdCamelCase}}Params{{#hasBodyParam}}, {{/hasBodyParam}}{{/hasQueryParams}}{{#hasBodyParam}}{{^hasQueryParams}}{{#hasPathParams}}, {{/hasPathParams}}{{/hasQueryParams}}body: {{#bodyParam}}{{{dataType}}}{{/bodyParam}}{{/hasBodyParam}}) -> Result<{{#responses}}{{#vendorExtensions.x-is-default}}{{{dataType}}}{{/vendorExtensions.x-is-default}}{{/responses}}{{#vendorExtensions.x-codegen-response-empty-default}}(){{/vendorExtensions.x-codegen-response-empty-default}}, Error> {
        let uri = PagerDuty::parse_url(&self.api_endpoint, {{#hasPathParams}}format!("{}/{}", &self.path(), {{#pathParams}}&{{paramName}}{{/pathParams}}){{/hasPathParams}}{{^hasPathParams}}&self.path(){{/hasPathParams}}, {{#hasQueryParams}}{{classname}}{{operationIdCamelCase}}ParamsBuilder::new().build().qs{{/hasQueryParams}}{{^hasQueryParams}}""{{/hasQueryParams}})?;
            
        let req = self.client.build_request(
            uri,
            Builder::new().method(Method::{{httpMethod}}),
            {{#hasBodyParam}}Some(PagerDuty::serialize_payload({{#bodyParam}}{{{dataType}}}{{/bodyParam}})?){{/hasBodyParam}}{{^hasBodyParam}}Body::empty(){{/hasBodyParam}});


        self.client
            .process_into_value(req)
            .await
    }
    {{/vendorExtensions.x-codegen-is-list-fn}}

{{/contents}}{{/operation}}{{/operations}}
}
